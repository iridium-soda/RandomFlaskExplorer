{
    "swagger": "2.0",
    "basePath": "/api/v1",
    "paths": {
        "/auth/oauth2_clients/": {
            "post": {
                "responses": {
                    "409": {
                        "description": "Request conflict",
                        "schema": {
                            "$ref": "#/definitions/HTTPError409"
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/DetailedOAuth2Client"
                        }
                    },
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "401": {
                        "description": "Authentication with auth:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Create a new OAuth2 Client",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nEssentially, OAuth2 Client is a ``client_id`` and ``client_secret``\npair associated with a user.",
                "operationId": "create_oauth_client",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "redirect_uris",
                        "required": false,
                        "collectionFormat": "multi",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "default_scopes",
                        "required": true,
                        "collectionFormat": "multi",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "auth:write"
                        ]
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "tags": [
                    "auth"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BaseOAuth2Client"
                            }
                        }
                    },
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with auth:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "List of OAuth2 Clients",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nReturns a list of OAuth2 Clients starting from ``offset`` limited by\n``limit`` parameter.",
                "operationId": "get_o_auth2_clients",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100,
                        "description": "limit a number of items (allowed range is 1-100), default is 20."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "minimum": 0,
                        "description": "a number of items to skip, default is 0."
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "auth:read"
                        ]
                    }
                ],
                "tags": [
                    "auth"
                ]
            },
            "options": {
                "responses": {
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with auth:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    },
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_o_auth2_clients",
                "security": [
                    {
                        "oauth2_password": [
                            "auth:read"
                        ]
                    }
                ],
                "tags": [
                    "auth"
                ]
            }
        },
        "/teams/": {
            "post": {
                "responses": {
                    "409": {
                        "description": "Request conflict",
                        "schema": {
                            "$ref": "#/definitions/HTTPError409"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/DetailedTeam"
                        }
                    },
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Create a new team",
                "description": "**PERMISSIONS: At least Active user is required.**",
                "operationId": "post_teams",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "title",
                        "required": true,
                        "type": "string",
                        "maxLength": 50
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "teams:write"
                        ]
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "tags": [
                    "teams"
                ]
            },
            "get": {
                "responses": {
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BaseTeam"
                            }
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "List of teams",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nReturns a list of teams starting from ``offset`` limited by ``limit``\nparameter.",
                "operationId": "get_teams",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100,
                        "description": "limit a number of items (allowed range is 1-100), default is 20."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "minimum": 0,
                        "description": "a number of items to skip, default is 0."
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "teams:read"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            },
            "options": {
                "responses": {
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    },
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_teams",
                "security": [
                    {
                        "oauth2_password": [
                            "teams:read"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            }
        },
        "/teams/{team_id}": {
            "parameters": [
                {
                    "name": "team_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Team not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/DetailedTeam"
                        }
                    },
                    "403": {
                        "description": "Owner/Supervisor/Admin may execute this action.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Get team details by ID",
                "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
                "operationId": "get_team_by_id",
                "security": [
                    {
                        "oauth2_password": [
                            "teams:read"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            },
            "patch": {
                "responses": {
                    "404": {
                        "description": "Team not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "409": {
                        "description": "Request conflict",
                        "schema": {
                            "$ref": "#/definitions/HTTPError409"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/DetailedTeam"
                        }
                    },
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "403": {
                        "description": "Owner/Supervisor/Admin may execute this action.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Patch team details by ID",
                "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
                "operationId": "patch_team_by_id",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "op": {
                                        "type": "string",
                                        "enum": [
                                            "replace"
                                        ]
                                    },
                                    "path": {
                                        "type": "string",
                                        "enum": [
                                            "/title"
                                        ]
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "op",
                                    "path"
                                ]
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "teams:write"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Team not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    },
                    "409": {
                        "description": "Request conflict",
                        "schema": {
                            "$ref": "#/definitions/HTTPError409"
                        }
                    },
                    "403": {
                        "description": "Owner/Supervisor/Admin may execute this action.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Delete a team by ID",
                "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
                "operationId": "delete_team_by_id",
                "security": [
                    {
                        "oauth2_password": [
                            "teams:write"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            },
            "options": {
                "responses": {
                    "404": {
                        "description": "Team not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    },
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_team_by_id",
                "security": [
                    {
                        "oauth2_password": [
                            "teams:read"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            }
        },
        "/teams/{team_id}/members/": {
            "parameters": [
                {
                    "name": "team_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "404": {
                        "description": "Team not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "409": {
                        "description": "Request conflict",
                        "schema": {
                            "$ref": "#/definitions/HTTPError409"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/BaseTeamMember"
                        }
                    },
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "403": {
                        "description": "Owner/Supervisor/Admin may execute this action.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Add a new member to a team",
                "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
                "operationId": "post_team_members",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "user_id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "formData",
                        "name": "is_leader",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "teams:write"
                        ]
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "tags": [
                    "teams"
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "Team not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BaseTeamMember"
                            }
                        }
                    },
                    "403": {
                        "description": "Owner/Supervisor/Admin may execute this action.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Get team members by team ID",
                "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
                "operationId": "get_team_members",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100,
                        "description": "limit a number of items (allowed range is 1-100), default is 20."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "minimum": 0,
                        "description": "a number of items to skip, default is 0."
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "teams:read"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            },
            "options": {
                "responses": {
                    "404": {
                        "description": "Team not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    },
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_team_members",
                "security": [
                    {
                        "oauth2_password": [
                            "teams:read"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            }
        },
        "/teams/{team_id}/members/{user_id}": {
            "parameters": [
                {
                    "name": "team_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "404": {
                        "description": "Team or member not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "409": {
                        "description": "Request conflict",
                        "schema": {
                            "$ref": "#/definitions/HTTPError409"
                        }
                    },
                    "403": {
                        "description": "Owner/Supervisor/Admin may execute this action.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Remove a member from a team",
                "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
                "operationId": "delete_team_member_by_id",
                "security": [
                    {
                        "oauth2_password": [
                            "teams:write"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            },
            "options": {
                "responses": {
                    "404": {
                        "description": "Team or member not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with teams:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    },
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_team_member_by_id",
                "security": [
                    {
                        "oauth2_password": [
                            "teams:read"
                        ]
                    }
                ],
                "tags": [
                    "teams"
                ]
            }
        },
        "/users/": {
            "post": {
                "responses": {
                    "409": {
                        "description": "Request conflict",
                        "schema": {
                            "$ref": "#/definitions/HTTPError409"
                        }
                    },
                    "403": {
                        "description": "Request forbidden -- authorization will not help",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/DetailedUser"
                        }
                    },
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    }
                },
                "summary": "Create a new user",
                "operationId": "create_user",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "username",
                        "required": true,
                        "type": "string",
                        "description": "Example: root"
                    },
                    {
                        "in": "formData",
                        "name": "first_name",
                        "required": false,
                        "type": "string",
                        "maxLength": 30
                    },
                    {
                        "in": "formData",
                        "name": "middle_name",
                        "required": false,
                        "type": "string",
                        "maxLength": 30
                    },
                    {
                        "in": "formData",
                        "name": "last_name",
                        "required": false,
                        "type": "string",
                        "maxLength": 30
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "required": true,
                        "type": "string",
                        "format": "email",
                        "description": "Example: root@gmail.com"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "required": true,
                        "type": "string",
                        "description": "No rules yet"
                    },
                    {
                        "in": "formData",
                        "name": "recaptcha_key",
                        "required": false,
                        "type": "string",
                        "description": "See `/users/signup-form` for details. It is required for everybody, except admins"
                    }
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "tags": [
                    "users"
                ]
            },
            "get": {
                "responses": {
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BaseUser"
                            }
                        }
                    },
                    "403": {
                        "description": "Admin role is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with users:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "List of users",
                "description": "**PERMISSIONS: Admin role is required.**\n\n\nReturns a list of users starting from ``offset`` limited by ``limit``\nparameter.",
                "operationId": "get_users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100,
                        "description": "limit a number of items (allowed range is 1-100), default is 20."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "minimum": 0,
                        "description": "a number of items to skip, default is 0."
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "users:read"
                        ]
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "options": {
                "responses": {
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "Use this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_users",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/me": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/DetailedUser"
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with users:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Get current user details",
                "description": "**PERMISSIONS: At least Active user is required.**",
                "operationId": "get_user_me",
                "security": [
                    {
                        "oauth2_password": [
                            "users:read"
                        ]
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "options": {
                "responses": {
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with users:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    },
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_user_me",
                "security": [
                    {
                        "oauth2_password": [
                            "users:read"
                        ]
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/signup-form": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/UserSignupForm"
                        }
                    }
                },
                "summary": "Get signup form keys",
                "description": "This endpoint must be used in order to get a server reCAPTCHA public key which\nmust be used to receive a reCAPTCHA secret key for POST /users/ form.",
                "operationId": "get_user_signup_form",
                "tags": [
                    "users"
                ]
            },
            "options": {
                "responses": {
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "Use this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_user_signup_form",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{user_id}": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/DetailedUser"
                        }
                    },
                    "403": {
                        "description": "Owner/Supervisor/Admin may execute this action.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with users:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Get user details by ID",
                "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
                "operationId": "get_user_by_id",
                "security": [
                    {
                        "oauth2_password": [
                            "users:read"
                        ]
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "responses": {
                    "404": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "409": {
                        "description": "Request conflict",
                        "schema": {
                            "$ref": "#/definitions/HTTPError409"
                        }
                    },
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "schema": {
                            "$ref": "#/definitions/DetailedUser"
                        }
                    },
                    "422": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HTTPError422"
                        }
                    },
                    "403": {
                        "description": "Owner/Supervisor/Admin may execute this action.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with users:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    }
                },
                "summary": "Patch user details by ID",
                "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
                "operationId": "patch_user_by_id",
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "op": {
                                        "type": "string",
                                        "enum": [
                                            "test",
                                            "add",
                                            "remove",
                                            "replace"
                                        ]
                                    },
                                    "path": {
                                        "type": "string",
                                        "enum": [
                                            "/current_password",
                                            "/first_name",
                                            "/middle_name",
                                            "/last_name",
                                            "/password",
                                            "/email",
                                            "/is_active",
                                            "/is_regular_user",
                                            "/is_admin"
                                        ]
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "op",
                                    "path"
                                ]
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "oauth2_password": [
                            "users:write"
                        ]
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "options": {
                "responses": {
                    "404": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError404"
                        }
                    },
                    "403": {
                        "description": "At least Active user is required.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError403"
                        }
                    },
                    "401": {
                        "description": "Authentication with users:read OAuth scope(s) is required",
                        "schema": {
                            "$ref": "#/definitions/HTTPError401"
                        }
                    },
                    "204": {
                        "description": "Request fulfilled, nothing follows"
                    }
                },
                "summary": "Check which methods are allowed",
                "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
                "operationId": "options_user_by_id",
                "security": [
                    {
                        "oauth2_password": [
                            "users:read"
                        ]
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        }
    },
    "info": {
        "title": "Flask-RESTplus Example API",
        "version": "1.0",
        "description": "It is a [real-life example RESTful API server implementation using Flask-RESTplus](https://github.com/frol/flask-restplus-server-example).\n\nThis demo features:\n* Self-documented RESTful API server using autogenerated OpenAPI specifications;\n* OAuth2 Password Flow (Resource Owner Password Credentials Grant) support;\n* Role-based permission system (it is also auto-documented);\n* PATCH method handled accordingly to RFC 6902;\n* 95+% code coverage.\n\n## Explore the demo\n\nI suggest you start with signing up a new user. To do so, use `POST /users/` endpoint with `recaptcha_key=\"secret_key\"`.\n\nYou will need to know the API Client ID to authenticate, so here it is: `documentation`. Sometimes (e.g. for token refreshing) you might need API Client Secret: `KQ()SWK)SQK)QWSKQW(SKQ)S(QWSQW(SJ*HQ&HQW*SQ*^SSQWSGQSG`.\n\nThere are also two built-in users:\n* `root` (administrator with all permissions) with password `q`\n* `user` (regular user) with password `w`\n"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "oauth2_password": {
            "type": "oauth2",
            "flow": "password",
            "scopes": {
                "auth:read": "Provide access to auth details",
                "auth:write": "Provide write access to auth details",
                "users:read": "Provide access to user details",
                "users:write": "Provide write access to user details",
                "teams:read": "Provide access to team details",
                "teams:write": "Provide write access to team details"
            },
            "tokenUrl": "/auth/oauth2/token"
        }
    },
    "tags": [
        {
            "name": "default",
            "description": "Default namespace"
        },
        {
            "name": "auth",
            "description": "Authentication"
        },
        {
            "name": "users",
            "description": "Users"
        },
        {
            "name": "teams",
            "description": "Teams"
        }
    ],
    "definitions": {
        "HTTPError409": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "HTTPError403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DetailedOAuth2Client": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "readOnly": true
                },
                "client_id": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 40
                },
                "client_secret": {
                    "type": "string",
                    "maxLength": 55
                },
                "redirect_uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "client_type": {
                    "type": "string",
                    "enum": [
                        "public",
                        "confidential"
                    ],
                    "maxLength": 12
                }
            },
            "required": [
                "client_id",
                "client_secret",
                "default_scopes",
                "redirect_uris"
            ]
        },
        "HTTPError422": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "HTTPError401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BaseOAuth2Client": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "readOnly": true
                },
                "client_id": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 40
                },
                "redirect_uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "client_type": {
                    "type": "string",
                    "enum": [
                        "public",
                        "confidential"
                    ],
                    "maxLength": 12
                }
            },
            "required": [
                "client_id",
                "default_scopes",
                "redirect_uris"
            ]
        },
        "DetailedUser": {
            "type": "object",
            "properties": {
                "last_name": {
                    "type": "string",
                    "maxLength": 30
                },
                "is_active": {
                    "type": "boolean"
                },
                "middle_name": {
                    "type": "string",
                    "maxLength": 30
                },
                "updated": {
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "type": "string",
                    "maxLength": 120
                },
                "is_admin": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 30
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string",
                    "maxLength": 80
                },
                "is_regular_user": {
                    "type": "boolean"
                }
            },
            "required": [
                "email",
                "username"
            ]
        },
        "BaseUser": {
            "type": "object",
            "properties": {
                "last_name": {
                    "type": "string",
                    "maxLength": 30
                },
                "middle_name": {
                    "type": "string",
                    "maxLength": 30
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 30
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "username": {
                    "type": "string",
                    "maxLength": 80
                }
            },
            "required": [
                "username"
            ]
        },
        "UserSignupForm": {
            "type": "object",
            "properties": {
                "recaptcha_server_key": {
                    "type": "string"
                }
            },
            "required": [
                "recaptcha_server_key"
            ]
        },
        "HTTPError404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DetailedTeam": {
            "type": "object",
            "properties": {
                "updated": {
                    "type": "string",
                    "format": "date-time"
                },
                "title": {
                    "type": "string",
                    "maxLength": 50
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "is_leader": {
                                "type": "boolean"
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 30
                                    },
                                    "middle_name": {
                                        "type": "string",
                                        "maxLength": 30
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 30
                                    },
                                    "id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "readOnly": true
                                    },
                                    "username": {
                                        "type": "string",
                                        "maxLength": 80
                                    }
                                },
                                "required": [
                                    "username"
                                ]
                            }
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "title"
            ]
        },
        "BaseTeam": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "title": {
                    "type": "string",
                    "maxLength": 50
                }
            },
            "required": [
                "title"
            ]
        },
        "BaseTeamMember": {
            "type": "object",
            "properties": {
                "is_leader": {
                    "type": "boolean"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "last_name": {
                            "type": "string",
                            "maxLength": 30
                        },
                        "middle_name": {
                            "type": "string",
                            "maxLength": 30
                        },
                        "first_name": {
                            "type": "string",
                            "maxLength": 30
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true
                        },
                        "username": {
                            "type": "string",
                            "maxLength": 80
                        }
                    },
                    "required": [
                        "username"
                    ]
                },
                "team": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true
                        },
                        "title": {
                            "type": "string",
                            "maxLength": 50
                        }
                    },
                    "required": [
                        "title"
                    ]
                }
            }
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}